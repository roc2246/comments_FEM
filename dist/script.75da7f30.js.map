{"version":3,"sources":["script.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_defineProperty","_toPropertyKey","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","Array","from","test","len","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","isArray","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","fetchData","_fetchData","_callee2","urlMap","promises","results","combinedResults","_callee2$","_context2","comments","currentUser","entries","map","_ref2","_callee","_ref","_ref3","url","response","_callee$","_context","fetch","ok","concat","t0","t1","t2","json","t3","_x10","all","reduce","acc","_objectSpread","console","data","CRUDFunction","delete","_delete","source","chosen","content","deleteBtn","childNodes","deleteModal","document","getElementsByClassName","deleteComment","addEventListener","toggles","innerText","comment","id","x","y","replies","log","remove","splice","httpRequest","_loop","container","getElementById","post","newCommentAvatar","querySelector","src","image","png","postCont","counter","createElement","classList","add","newComment","avatar","element","username","createdAt","updateForm","vote","CRUD","ele","append","user","createReplyForm","replyForm","alt","appendChild","replyInput","placeholder","replySend","replyCont","hr","reply","style","gridTemplateRows","childElementCount","selectors","form","replyToReply","update","btn","replyTo","replyReplyTo","querySelectorAll","userComments","modal","replyContent","replyToReplyContent","edit","headers","body","JSON","stringify","scoreContianer","mode","postContainer","parentElement","change","score","postData","params","options","contains","display","_loop2","editBtn","_loop3","replyBtn","_loop4","replyCount","no","previousElementSibling","generateID","IDarray","ID","Math","max","newPost","e","preventDefault","webp","wrapper","_loop5","_x4","newReply","replyingTo","insertAdjacentElement","replyWrapper","_loop6","_x5","parentUser","parentNode","parentComment","previousSibling","_loop7","_x6","oldContent","newContent","_loop8","_x7","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","stackTrace","innerHTML","getParents","modules","parents","k","d","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..\\src","sourcesContent":["async function fetchData() {\n  try {\n    // Define an object with key-value pairs where keys represent labels and values are URLs\n    const urlMap = {\n      comments: \"http://localhost:3000/comments\",\n      currentUser: \"http://localhost:3000/currentUser\",\n    };\n\n    // Create an array of Promises for fetch requests using Object.entries()\n    const promises = Object.entries(urlMap).map(async ([key, url]) => {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Request for ${url} failed`);\n      }\n      return { [key]: await response.json() }; // Store the result with a key\n    });\n\n    // Use Promise.all() to wait for all Promises to resolve\n    const results = await Promise.all(promises);\n\n    // Combine the results into a single object\n    const combinedResults = results.reduce((acc, result) => {\n      return { ...acc, ...result };\n    }, {});\n\n    return combinedResults;\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\n\n// GENERATES COMMENTS\nfetchData()\n  .then((data) => {\n    const { comments, currentUser } = data;\n\n    \n    // STORES CRUD FUNCTIONALITY\n    const CRUDFunction = {\n      delete: function (source) {\n        let chosen;\n        let content;\n        const deleteBtn = source.childNodes[5].childNodes[0];\n        const deleteModal = document.getElementsByClassName(\"modal\")[0];\n        const deleteComment = document.getElementsByClassName(\n          \"modal__btn-box--delete\"\n        )[0];\n\n        deleteBtn.addEventListener(\"click\", () => {\n          toggles.delete(deleteModal);\n\n          chosen = source.childNodes[3];\n          // Sets post content\n          if (chosen.childNodes[1]) {\n            content = chosen.childNodes[1].innerText;\n          } else {\n            content = chosen.childNodes[0].innerText;\n          }\n        });\n\n        deleteComment.addEventListener(\"click\", () => {\n          const comment = document.getElementsByClassName(\"comment\");\n\n          let id;\n          for (let x in comments) {\n            if (content === comments[x].content) {\n              id = comments[x].id;\n              break;\n            } else {\n              for (let y in comments[x].replies) {\n                if (content === comments[x].replies[y].content) {\n                  id = comments[x].replies[y].id;\n                  break;\n                }\n              }\n            }\n          }\n          console.log(id);\n\n          // Deletes post in data\n          if (id !== undefined) {\n            // Deletes post in DOM\n            for (let x in comment) {\n              if (source === comment[x]) {\n                comment[x].remove();\n                break;\n              }\n            }\n\n            for (let i = 0; i < comments.length; i++) {\n              if (comments[i].id === id) {\n                comments.splice(i, 1); // Remove the object at index i\n                break; // Stop searching after removal\n              }\n            }\n\n            httpRequest.delete(id);\n          }\n        });\n      },\n    };\n\n    // const { comments, currentUser } = data;\n    for (let comment in comments) {\n      const container = document.getElementById(\"comment-wrapper\");\n      const post = comments[comment];\n\n      // sets current user's avatar in new comment form\n      const newCommentAvatar = document.querySelector(\".avatar--new-comment\");\n      newCommentAvatar.src = currentUser[0].image.png;\n\n      // function for generating comments and replies\n      function postCont(type, counter) {\n        const container = document.createElement(\"div\");\n        container.classList.add(\"comment\");\n\n        // sets the type of post (i.e; reply, comment, etc.)\n        let post;\n        if (type === \"reply\") {\n          container.classList.add(\"comment--reply\");\n          post = comments[comment].replies[counter];\n        } else if (type === \"comment\") {\n          post = comments[comment];\n          counter = null;\n        }\n\n        // creates child elements for post\n        const newComment = {\n          avatar: element.avatar(post),\n          username: element.username(post),\n          createdAt: element.createdAt(post),\n          content: element.content(post),\n          updateForm: element.updateForm(post),\n          vote: element.vote(post),\n          CRUD: element.CRUD(post),\n        };\n        for (let ele in newComment) {\n          if (newComment[ele] !== newComment.updateForm) {\n            container.append(newComment[ele]);\n          }\n        }\n        if (currentUser[0].username === post.user.username) {\n          container.append(newComment.updateForm);\n          container.classList.add(\"comment--you\");\n        }\n\n        // adds other classes if post is reply\n        if (type === \"reply\") {\n          newComment.CRUD.classList.add(\"CRUD-container--reply\");\n        }\n\n        // Adds CRUD functionality\n        if (currentUser[0].username === post.user.username) {\n          CRUDFunction.delete(container);\n        }\n\n        return container;\n      }\n\n      // function for creating reply form\n      function createReplyForm(type) {\n        const replyForm = document.createElement(\"form\");\n        replyForm.classList.add(\"new-comment\");\n        replyForm.classList.add(\"new-comment--reply\");\n\n        // sets extra class if form is for a reply to reply\n        if (type === \"reply\") {\n          replyForm.classList.add(\"new-comment--replytoreply\");\n        } else {\n          type = null;\n        }\n\n        const avatar = document.createElement(\"img\");\n        avatar.classList.add(\"avatar\");\n        avatar.classList.add(\"avatar--new-reply\");\n        avatar.src = currentUser[0].image.png;\n        avatar.alt = post.user.username;\n        replyForm.appendChild(avatar);\n\n        const replyInput = document.createElement(\"textarea\");\n        replyInput.classList.add(\"new-comment__input\");\n        replyInput.placeholder = \"...Add a reply\";\n        replyForm.appendChild(replyInput);\n\n        const replySend = document.createElement(\"button\");\n        replySend.classList.add(\"btn\");\n        replySend.classList.add(\"new-comment__send\");\n        replySend.innerText = \"REPLY\";\n        replyForm.appendChild(replySend);\n\n        return replyForm;\n      }\n\n      // Generates comments\n      if (post.replies.length > 0) {\n        container.appendChild(postCont(\"comment\"));\n\n        // Creates container for replies\n        const replyCont = document.createElement(\"div\");\n        replyCont.classList.add(\"reply-wrapper\");\n        const hr = document.createElement(\"hr\");\n        hr.classList.add(\"reply-wrapper__ruler\");\n        replyCont.appendChild(hr);\n        container.appendChild(replyCont);\n\n        // Generates replies\n        for (let reply in post.replies) {\n          replyCont.appendChild(postCont(\"reply\", reply));\n          if (post.replies[reply].user.username !== currentUser[0].username) {\n            replyCont.appendChild(createReplyForm(\"reply\"));\n          }\n        }\n\n        // Generates hr hight for reply container\n        replyCont.style.gridTemplateRows = `repeat(${replyCont.childElementCount}, auto)`;\n\n        // Generates reply forms\n        if (post.user.username !== currentUser[0].username) {\n          container.appendChild(createReplyForm());\n        }\n      } else {\n        container.appendChild(postCont(\"comment\"));\n        if (post.user.username !== currentUser[0].username) {\n          container.appendChild(createReplyForm());\n        }\n      }\n    }\n\n    // CONTAINERS\n\n    // CONTAINERS - DOM SELECTORS\n    const selectors = {\n      reply: \".comment--reply:not(.comment--you)\",\n      comment: \".comment:not(.comment--you):not(.comment--reply)\",\n      form: {\n        comment:\n          \".new-comment:not(.new-comment--reply):not(.new-comment--update)\",\n        reply: \".new-comment--reply:not(.new-comment--replytoreply)\",\n        replyToReply: \".new-comment--replytoreply\",\n        update: \".new-comment--update\",\n      },\n      btn: {\n        reply: \".CRUD-container:not(.CRUD-container--reply) > .CRUD--reply\",\n        replyToReply: \".CRUD-container--reply > .CRUD--reply\",\n        deleteComment: \"modal__btn-box--delete\",\n      },\n      input: {\n        comment:\n          \".new-comment:not(.new-comment--reply):not(.new-comment--update) > .new-comment__input\",\n        reply:\n          \".new-comment--reply:not(.new-comment--replytoreply)> .new-comment__input\",\n        replyToReply: \".new-comment--replytoreply> .new-comment__input\",\n        replyTo: \".comment:not(.comment--reply) > .username\",\n        replyReplyTo: \".comment--reply:not(.comment--replytoreply) > .username\",\n        update: \".new-comment--update > .new-comment__input\",\n      },\n    };\n\n    // CONTAINERS - ELEMENTS\n    const container = {\n      replies: document.querySelectorAll(selectors.reply),\n      comments: document.querySelectorAll(selectors.comment),\n      userComments: document.getElementsByClassName(\"comment--you\"),\n      modal: document.getElementsByClassName(\"modal__btn-box--cancel\")[0],\n      btn: {\n        deleteComment: document.getElementsByClassName(\n          \"modal__btn-box--delete\"\n        )[0],\n      },\n      form: {\n        comment: document.querySelector(selectors.form.comment),\n        reply: document.querySelectorAll(selectors.form.reply),\n        replyToReply: document.querySelectorAll(selectors.form.replyToReply),\n        update: document.querySelectorAll(selectors.form.update),\n      },\n      input: {\n        replyTo: document.querySelectorAll(selectors.input.replyTo),\n        replyReplyTo: document.querySelectorAll(selectors.input.replyReplyTo),\n        replyContent: document.querySelectorAll(selectors.input.reply),\n        replyToReplyContent: document.querySelectorAll(\n          selectors.input.replyToReply\n        ),\n        update: document.querySelectorAll(selectors.input.update),\n      },\n    };\n\n    // CONTAINERS - CRUD BUTTONS\n    const CRUD = {\n      edit: document.getElementsByClassName(\"CRUD--edit\"),\n      delete: document.getElementsByClassName(\"CRUD--delete\"),\n      reply: document.getElementsByClassName(\"CRUD--reply\"),\n    };\n\n    // METHODS\n\n    // METHODS - HTTP REQUESTS\n    const httpRequest = {\n      update: function (id, update) {\n        fetch(`http://localhost:3000/update/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json', // You may need to adjust the content type based on your application's needs\n          },\n          body: JSON.stringify(update) // If you have data to send in the request, it needs to be converted to a JSON string\n        })\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            return response.json(); // If you expect JSON data in the response\n          })\n          .then(data => {\n            // Handle the response data here\n          })\n          .catch(error => {\n            console.error('Error:', error);\n          });\n      },\n      vote: function (scoreContianer, mode) {\n        const postContainer = scoreContianer.parentElement.parentElement;\n        let content;\n        let change;\n        let score = scoreContianer.innerText;\n        mode === \"upvote\" ? (change = score++) : (change = score--);\n        if (postContainer.childNodes[3].childNodes[1]) {\n          content = postContainer.childNodes[3].childNodes[1];\n        } else {\n          content = postContainer.childNodes[3];\n        }\n        for (let x in comments) {\n          if (comments[x].content === content) {\n            comments[x].score = change;\n          } else {\n            for (let y in comments[x].replies[y]) {\n              const reply = comments[x].replies[y];\n              if ((reply.content = content)) {\n                reply.score = change;\n              }\n            }\n          }\n        }\n      },\n      post: function (src) {\n        const postData = src;\n        const params = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(postData),\n        };\n        // Possible put id here to insert new replies and replytoreplies to database\n        fetch(\"http://localhost:3000/newPost\", params).then((response) => {\n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n          return response.json();\n        });\n      },\n      delete: function (id) {\n        const options = {\n          method: \"DELETE\", // Use the DELETE HTTP method\n          headers: {\n            \"Content-Type\": \"application/json\", // Set the content type if needed\n            // You may also need to include authentication headers or other headers here\n          },\n        };\n\n        // Send the DELETE request\n        fetch(`http://localhost:3000/delete/${id}`, options)\n          .then((response) => {\n            if (response.ok) {\n              // Resource successfully deleted\n              console.log(\"Resource deleted successfully\");\n            } else {\n              // Handle error cases here\n              console.error(\"Error deleting resource\");\n            }\n          })\n          .catch((error) => {\n            console.error(\"Fetch error:\", error);\n          });\n      },\n    };\n\n    // METHODS - BUTTON TOGGLES\n    const toggles = {\n      comments: data.comments,\n      edit: function (container) {\n        if (!container.classList.contains(\"comment--edit\")) {\n          container.classList.add(\"comment--edit\");\n        } else {\n          container.classList.remove(\"comment--edit\");\n        }\n      },\n      reply: function (container) {\n        if (container.style.display === \"\") {\n          container.style.display = \"grid\";\n        } else {\n          container.style.display = \"\";\n        }\n      },\n      delete: function (container) {\n        if (\n          container.style.display === \"none\" ||\n          container.style.display === \"\"\n        ) {\n          container.style.display = \"flex\";\n        }\n      },\n    };\n\n    // TOGGLES\n\n    // TOGGLES - EDIT MODE\n    for (let x = 0; x < container.userComments.length; x++) {\n      const comment = container.userComments[x];\n      const editBtn = CRUD.edit[x];\n\n      editBtn.addEventListener(\"click\", () => {\n        toggles.edit(comment);\n      });\n    }\n\n    // TOGGLES - COMMENT REPLY\n    for (let x = 0; x < container.comments.length; x++) {\n      const replyForm = document.querySelectorAll(selectors.form.reply)[x];\n      const replyBtn = document.querySelectorAll(selectors.btn.reply)[x];\n\n      replyBtn.addEventListener(\"click\", () => {\n        toggles.reply(replyForm);\n      });\n    }\n\n    // TOGGLES - REPLY TO REPLY\n    for (let x = 0; x < container.replies.length; x++) {\n      const replyForm = document.querySelectorAll(selectors.form.replyToReply)[\n        x\n      ];\n      const replyBtn = document.querySelectorAll(selectors.btn.replyToReply)[x];\n\n      replyBtn.addEventListener(\"click\", () => {\n        toggles.reply(replyForm);\n      });\n    }\n\n    // TOGGLES - CLOSE DELETE MODAL\n    container.modal.addEventListener(\"click\", () => {\n      const deleteModal = document.getElementsByClassName(\"modal\")[0];\n      if (deleteModal.style.display === \"flex\") {\n        deleteModal.style.display = \"none\";\n      }\n    });\n\n    // CRUD\n\n    // CRUD - FUNCTIONS\n\n    // CRUD - FUNCTIONS - GET REPLY COUNT\n    function replyCount(no, type) {\n      let replyCont;\n      if (type === \"reply\") {\n        replyCont = container.form.reply[no].previousElementSibling;\n      } else if (type === \"replytoreply\") {\n        replyCont = container.form.replyToReply[no].parentElement;\n      }\n      return replyCont.childElementCount;\n    }\n\n    // CRUD - FUNCTIONS - GENERATE ID\n    function generateID() {\n      let IDarray = [];\n      for (let id in comments) {\n        IDarray.push(comments[id].id);\n        if (comments[id].replies.length > 0) {\n          for (let reply in comments[id].replies)\n            IDarray.push(comments[id].replies[reply].id);\n        }\n      }\n      const ID = Math.max(...IDarray) + 1;\n      return ID;\n    }\n\n    // CRUD - FUNCTIONS - NEW POST\n    function newPost(type, source) {\n      const { currentUser } = data;\n\n      const postContainer = document.createElement(\"div\");\n      postContainer.classList.add(\"comment\");\n\n      // adds extra classes if post isn't a comment\n      if (type === \"reply\") {\n        postContainer.classList.add(\"comment--reply\");\n      } else if (type === \"replytoreply\") {\n        postContainer.classList.add(\"comment--reply\");\n        postContainer.classList.add(\"comment--replytoreply\");\n      }\n      postContainer.classList.add(\"comment--you\");\n\n      // generates child elements for new post\n      const newComment = {\n        avatar: element.avatar(source),\n        username: element.username(source),\n        createdAt: element.createdAt(source),\n        content: element.content(source),\n        updateForm: element.updateForm(source),\n        vote: element.vote(source),\n        CRUD: element.CRUD(source),\n      };\n      for (let ele in newComment) {\n        if (newComment[ele] !== newComment.updateForm) {\n          postContainer.append(newComment[ele]);\n        }\n      }\n      if (currentUser[0].username === source.user.username) {\n        postContainer.append(newComment.updateForm);\n      }\n\n      // adds reply class to crud container\n      if (type === \"reply\") {\n        newComment.CRUD.classList.add(\"CRUD-container--reply\");\n      }\n\n      // Adds CRUD functionality\n      CRUDFunction.delete(postContainer);\n\n      return postContainer;\n    }\n\n    // CRUD - DOM MANIPULATION\n    // CRUD - DOM MANIPULATION - NEW COMMENT\n    container.form.comment.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n\n      const { comments, currentUser } = data;\n      const content = document.querySelector(selectors.input.comment).value;\n\n      const newComment = {\n        id: generateID(),\n        content: content,\n        createdAt: \"TEST\",\n        score: 0,\n        user: {\n          image: {\n            png: currentUser[0].image.png,\n            webp: currentUser[0].image.webp,\n          },\n          username: currentUser[0].username,\n        },\n        replies: [],\n      };\n\n      // Adds comment in data\n      httpRequest.post(newComment);\n      comments.push(newComment);\n\n      // Adds comment in DOM\n      const wrapper = document.getElementById(\"comment-wrapper\");\n      wrapper.appendChild(newPost(\"comment\", newComment));\n    });\n\n    // CRUD - DOM MANIPULATION - NEW REPLY\n    for (let x = 0; x < container.form.reply.length; x++) {\n      container.form.reply[x].addEventListener(\"submit\", (e) => {\n        e.preventDefault();\n\n        const { comments, currentUser } = data;\n        const replyTo = container.input.replyTo[x].innerText;\n        const content = container.input.replyContent[x].value;\n\n        const newReply = {\n          id: generateID(),\n          content: content,\n          createdAt: \"TEST\",\n          replyingTo: replyTo,\n          replies: {},\n          score: 0,\n          user: {\n            image: {\n              png: currentUser[0].image.png,\n              webp: currentUser[0].image.webp,\n            },\n            username: currentUser[0].username,\n          },\n        };\n\n        if (comments[x].replies.length === 0) {\n          // Creates container for replies\n          const replyCont = document.createElement(\"div\");\n          replyCont.classList.add(\"reply-wrapper\");\n          const hr = document.createElement(\"hr\");\n          hr.classList.add(\"reply-wrapper__ruler\");\n          replyCont.appendChild(hr);\n          container.comments[x].insertAdjacentElement(\"afterend\", replyCont);\n\n          // Adds reply in data\n          comments[x].replies[newReply.id] = newReply;\n\n          // Adds reply in DOM\n          replyCont.appendChild(newPost(\"reply\", newReply));\n\n          // Generates hr height for reply container\n          replyCont.style.gridTemplateRows = `repeat(${replyCount(\n            x,\n            \"reply\"\n          )}, auto)`;\n        } else {\n          comments[x].replies[newReply.id] = newReply;\n\n          const replyWrapper = container.form.reply[x].previousElementSibling;\n          replyWrapper.appendChild(newPost(\"reply\", newReply));\n\n          // Generates hr height for reply container\n          replyWrapper.style.gridTemplateRows = `repeat(${replyCount(\n            x,\n            \"reply\"\n          )}, auto)`;\n        }\n        // comments[x].replies[comments[x].replies.length + 1].push(newReply);\n        httpRequest.post(newReply)\n      });\n    }\n\n    //  CRUD - DOM MANIPULATION - NEW REPLY TO REPLY\n    for (let x = 0; x < container.form.replyToReply.length; x++) {\n      container.form.replyToReply[x].addEventListener(\"submit\", (e) => {\n        e.preventDefault();\n\n        const { comments, currentUser } = data;\n        const replyTo = container.input.replyReplyTo[x].innerText;\n        const parentUser = container.input.replyReplyTo[x].parentElement.parentElement.previousElementSibling.childNodes[1].innerText\n        const content = container.input.replyToReplyContent[x].value;\n        console.log(parentUser)\n\n        const newReply = {\n          id: generateID(),\n          content: content,\n          createdAt: \"TEST\",\n          replyingTo: replyTo,\n          parentUser: parentUser,\n          replies: {},\n          score: 0,\n          user: {\n            image: {\n              png: currentUser[0].image.png,\n              webp: currentUser[0].image.webp,\n            },\n            username: currentUser[0].username,\n          },\n        };\n\n        // Adds replytoreply in DOM\n        const replyWrapper = container.form.replyToReply[x].parentNode;\n        replyWrapper.appendChild(newPost(\"replytoreply\", newReply));\n\n        // Generates hr height for reply container\n        replyWrapper.style.gridTemplateRows = `repeat(${replyCount(\n          x,\n          \"replytoreply\"\n        )}, auto)`;\n\n        // Adds replytoreply in data\n        const parentComment =\n          replyWrapper.previousSibling.childNodes[3].childNodes[0].innerText;\n        for (let x in comments) {\n          if (comments[x].content === parentComment) {\n            const replies = comments[x].replies;\n            replies[replies.length] = newReply;\n          }\n        }\n\n        httpRequest.post(newReply)\n      });\n    }\n\n    // CRUD - DOM MANIPULATION - UPDATE\n    for (let x = 0; x < container.form.update.length; x++) {\n      container.form.update[x].addEventListener(\"submit\", (e) => {\n        e.preventDefault();\n\n        // Sets post content\n        let oldContent;\n        if (\n          container.input.update[x].parentElement.parentElement.childNodes[3]\n            .childNodes[1]\n        ) {\n          oldContent =\n            container.input.update[x].parentElement.parentElement.childNodes[3]\n              .childNodes[1];\n        } else {\n          oldContent =\n            container.input.update[x].parentElement.parentElement.childNodes[3]\n              .childNodes[0];\n        }\n\n        // Sets id of updated comment\n        let id\n        for(let x in comments){\n          if (oldContent.innerText ===comments[x].content){\n            id = comments[x].id\n          } else {\n            for(let y in comments[x].replies){\n              if (oldContent.innerText ===comments[x].replies[y].content){\n                id = comments[x].replies[y].id\n              }\n            }\n          }\n        }\n\n        // Stores new text for content\n        const newContent = container.input.update[x].value;\n\n        // Updates post in data\n        httpRequest.update(id, {content: newContent});\n\n        // Updates post in DOM\n        oldContent.innerText = newContent;\n      });\n    }\n\n    // VOTE\n    // VOTE - FUNCTION\n    function vote(mode) {\n      const vote = document.getElementsByClassName(`vote__btn--${mode}`);\n      for (let x = 0; x < vote.length; x++) {\n        vote[x].addEventListener(\"click\", (e) => {\n          e.preventDefault();\n\n          // Changes score in DOM\n          const scoreContianer = vote[x].parentElement.childNodes[1];\n          let score = scoreContianer.innerText;\n          mode === \"upvote\" ? score++ : score--;\n          scoreContianer.innerText = score;\n\n          // Changes score in data\n          mode === \"upvote\"\n            ? httpRequest.vote(scoreContianer, \"upvote\")\n            : httpRequest.vote(scoreContianer, \"downvote\");\n        });\n      }\n    }\n\n    // VOTE - UPVOTE\n    vote(\"upvote\");\n\n    // VOTE - DOWNVOTE\n    vote(\"downvote\");\n  })\n  .catch((error) => {\n    // Handle any errors that occurred during the fetch\n    console.error(\"There was a problem with the fetch operation:\", error);\n  });\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}
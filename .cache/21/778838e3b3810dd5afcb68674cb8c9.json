{"id":"js/newPosts.js","dependencies":[{"name":"C:\\Users\\riley\\OneDrive\\Desktop\\web-projects\\interactive-comments-section-main\\package.json","includedInParent":true,"mtime":1693749474738}],"generated":{"js":"// // CRUD\n\n//     // CRUD - FUNCTIONS\n\n//     // CRUD - FUNCTIONS - GET REPLY COUNT\n//     function replyCount(no, type) {\n//         let replyCont;\n//         if (type === \"reply\") {\n//           replyCont = container.form.reply[no].previousElementSibling;\n//         } else if (type === \"replytoreply\") {\n//           replyCont = container.form.replyToReply[no].parentElement;\n//         }\n//         return replyCont.childElementCount;\n//       }\n\n//       // CRUD - FUNCTIONS - GENERATE ID\n//       function generateID() {\n//         let IDarray = [];\n//         for (let id in comments) {\n//           IDarray.push(comments[id].id);\n//           if (comments[id].replies.length > 0) {\n//             for (let reply in comments[id].replies)\n//               IDarray.push(comments[id].replies[reply].id);\n//           }\n//         }\n//         const ID = Math.max(...IDarray) + 1;\n//         return ID;\n//       }\n\n//       // CRUD - FUNCTIONS - NEW POST\n//       function newPost(type, source) {\n//         const { currentUser } = data;\n\n//         const postContainer = document.createElement(\"div\");\n//         postContainer.classList.add(\"comment\");\n\n//         // adds extra classes if post isn't a comment\n//         if (type === \"reply\") {\n//           postContainer.classList.add(\"comment--reply\");\n//         } else if (type === \"replytoreply\") {\n//           postContainer.classList.add(\"comment--reply\");\n//           postContainer.classList.add(\"comment--replytoreply\");\n//         }\n//         postContainer.classList.add(\"comment--you\");\n\n//         // generates child elements for new post\n//         const newComment = {\n//           avatar: element.avatar(source),\n//           username: element.username(source),\n//           createdAt: element.createdAt(source),\n//           content: element.content(source),\n//           updateForm: element.updateForm(source),\n//           vote: element.vote(source),\n//           CRUD: element.CRUD(source),\n//         };\n//         for (let ele in newComment) {\n//           if (newComment[ele] !== newComment.updateForm) {\n//             postContainer.append(newComment[ele]);\n//           }\n//         }\n//         if (currentUser[0].username === source.user.username) {\n//           postContainer.append(newComment.updateForm);\n//         }\n\n//         // adds reply class to crud container\n//         if (type === \"reply\") {\n//           newComment.CRUD.classList.add(\"CRUD-container--reply\");\n//         }\n\n//         // Adds CRUD functionality\n//         CRUDFunction.delete(postContainer);\n\n//         return postContainer;\n//       }\n\n//       // CRUD - DOM MANIPULATION\n//       // CRUD - DOM MANIPULATION - NEW COMMENT\n//       container.form.comment.addEventListener(\"submit\", (e) => {\n//         e.preventDefault();\n\n//         const { comments, currentUser } = data;\n//         const content = document.querySelector(selectors.input.comment).value;\n\n//         const newComment = {\n//           id: generateID(),\n//           content: content,\n//           createdAt: \"TEST\",\n//           score: 0,\n//           user: {\n//             image: {\n//               png: currentUser[0].image.png,\n//               webp: currentUser[0].image.webp,\n//             },\n//             username: currentUser[0].username,\n//           },\n//           replies: [],\n//         };\n\n//         // Adds comment in data\n//         httpRequest.post(newComment);\n//         comments.push(newComment);\n\n//         // Adds comment in DOM\n//         const wrapper = document.getElementById(\"comment-wrapper\");\n//         wrapper.appendChild(newPost(\"comment\", newComment));\n//       });\n\n//       // CRUD - DOM MANIPULATION - NEW REPLY\n//       for (let x = 0; x < container.form.reply.length; x++) {\n//         container.form.reply[x].addEventListener(\"submit\", (e) => {\n//           e.preventDefault();\n\n//           const { comments, currentUser } = data;\n//           const replyTo = container.input.replyTo[x].innerText;\n//           const content = container.input.replyContent[x].value;\n\n//           const newReply = {\n//             id: generateID(),\n//             content: content,\n//             createdAt: \"TEST\",\n//             replyingTo: replyTo,\n//             replies: {},\n//             score: 0,\n//             user: {\n//               image: {\n//                 png: currentUser[0].image.png,\n//                 webp: currentUser[0].image.webp,\n//               },\n//               username: currentUser[0].username,\n//             },\n//           };\n\n//           if (comments[x].replies.length === 0) {\n//             // Creates container for replies\n//             const replyCont = document.createElement(\"div\");\n//             replyCont.classList.add(\"reply-wrapper\");\n//             const hr = document.createElement(\"hr\");\n//             hr.classList.add(\"reply-wrapper__ruler\");\n//             replyCont.appendChild(hr);\n//             container.comments[x].insertAdjacentElement(\"afterend\", replyCont);\n\n//             // Adds reply in data\n//             comments[x].replies[newReply.id] = newReply;\n\n//             // Adds reply in DOM\n//             replyCont.appendChild(newPost(\"reply\", newReply));\n\n//             // Generates hr height for reply container\n//             replyCont.style.gridTemplateRows = `repeat(${replyCount(\n//               x,\n//               \"reply\"\n//             )}, auto)`;\n//           } else {\n//             comments[x].replies[newReply.id] = newReply;\n\n//             const replyWrapper = container.form.reply[x].previousElementSibling;\n//             replyWrapper.appendChild(newPost(\"reply\", newReply));\n\n//             // Generates hr height for reply container\n//             replyWrapper.style.gridTemplateRows = `repeat(${replyCount(\n//               x,\n//               \"reply\"\n//             )}, auto)`;\n//           }\n//           // comments[x].replies[comments[x].replies.length + 1].push(newReply);\n//           httpRequest.post(newReply)\n//         });\n//       }\n\n//       //  CRUD - DOM MANIPULATION - NEW REPLY TO REPLY\n//       for (let x = 0; x < container.form.replyToReply.length; x++) {\n//         container.form.replyToReply[x].addEventListener(\"submit\", (e) => {\n//           e.preventDefault();\n\n//           const { comments, currentUser } = data;\n//           const replyTo = container.input.replyReplyTo[x].innerText;\n//           const parentUser = container.input.replyReplyTo[x].parentElement.parentElement.previousElementSibling.childNodes[1].innerText\n//           const content = container.input.replyToReplyContent[x].value;\n//           console.log(parentUser)\n\n//           const newReply = {\n//             id: generateID(),\n//             content: content,\n//             createdAt: \"TEST\",\n//             replyingTo: replyTo,\n//             parentUser: parentUser,\n//             replies: {},\n//             score: 0,\n//             user: {\n//               image: {\n//                 png: currentUser[0].image.png,\n//                 webp: currentUser[0].image.webp,\n//               },\n//               username: currentUser[0].username,\n//             },\n//           };\n\n//           // Adds replytoreply in DOM\n//           const replyWrapper = container.form.replyToReply[x].parentNode;\n//           replyWrapper.appendChild(newPost(\"replytoreply\", newReply));\n\n//           // Generates hr height for reply container\n//           replyWrapper.style.gridTemplateRows = `repeat(${replyCount(\n//             x,\n//             \"replytoreply\"\n//           )}, auto)`;\n\n//           // Adds replytoreply in data\n//           const parentComment =\n//             replyWrapper.previousSibling.childNodes[3].childNodes[0].innerText;\n//           for (let x in comments) {\n//             if (comments[x].content === parentComment) {\n//               const replies = comments[x].replies;\n//               replies[replies.length] = newReply;\n//             }\n//           }\n\n//           httpRequest.post(newReply)\n//         });\n//       }\n\n//       // CRUD - DOM MANIPULATION - UPDATE\n//       for (let x = 0; x < container.form.update.length; x++) {\n//         container.form.update[x].addEventListener(\"submit\", (e) => {\n//           e.preventDefault();\n\n//           // Sets post content\n//           let oldContent;\n//           if (\n//             container.input.update[x].parentElement.parentElement.childNodes[3]\n//               .childNodes[1]\n//           ) {\n//             oldContent =\n//               container.input.update[x].parentElement.parentElement.childNodes[3]\n//                 .childNodes[1];\n//           } else {\n//             oldContent =\n//               container.input.update[x].parentElement.parentElement.childNodes[3]\n//                 .childNodes[0];\n//           }\n\n//           // Sets id of updated comment\n//           let id\n//           for(let x in comments){\n//             if (oldContent.innerText ===comments[x].content){\n//               id = comments[x].id\n//             } else {\n//               for(let y in comments[x].replies){\n//                 if (oldContent.innerText ===comments[x].replies[y].content){\n//                   id = comments[x].replies[y].id\n//                 }\n//               }\n//             }\n//           }\n\n//           // Stores new text for content\n//           const newContent = container.input.update[x].value;\n\n//           // Updates post in data\n//           httpRequest.update(id, {content: newContent});\n\n//           // Updates post in DOM\n//           oldContent.innerText = newContent;\n//         });\n//       }\n\n//       // VOTE\n//       // VOTE - FUNCTION\n//       function vote(mode) {\n//         const vote = document.getElementsByClassName(`vote__btn--${mode}`);\n//         for (let x = 0; x < vote.length; x++) {\n//           vote[x].addEventListener(\"click\", (e) => {\n//             e.preventDefault();\n\n//             // Changes score in DOM\n//             const scoreContianer = vote[x].parentElement.childNodes[1];\n//             let score = scoreContianer.innerText;\n//             mode === \"upvote\" ? score++ : score--;\n//             scoreContianer.innerText = score;\n\n//             // Changes score in data\n//             mode === \"upvote\"\n//               ? httpRequest.vote(scoreContianer, \"upvote\")\n//               : httpRequest.vote(scoreContianer, \"downvote\");\n//           });\n//         }\n//       }\n\n//       // VOTE - UPVOTE\n//       vote(\"upvote\");\n\n//       // VOTE - DOWNVOTE\n//       vote(\"downvote\");"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/newPosts.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"js/newPosts.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"js/newPosts.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"js/newPosts.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"js/newPosts.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"js/newPosts.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"js/newPosts.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"js/newPosts.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"js/newPosts.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"js/newPosts.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"js/newPosts.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"js/newPosts.js","original":{"line":14,"column":0}},{"generated":{"line":16,"column":0},"source":"js/newPosts.js","original":{"line":16,"column":0}},{"generated":{"line":17,"column":0},"source":"js/newPosts.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"js/newPosts.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"js/newPosts.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"js/newPosts.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"js/newPosts.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"js/newPosts.js","original":{"line":22,"column":0}},{"generated":{"line":23,"column":0},"source":"js/newPosts.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"js/newPosts.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"js/newPosts.js","original":{"line":25,"column":0}},{"generated":{"line":26,"column":0},"source":"js/newPosts.js","original":{"line":26,"column":0}},{"generated":{"line":27,"column":0},"source":"js/newPosts.js","original":{"line":27,"column":0}},{"generated":{"line":28,"column":0},"source":"js/newPosts.js","original":{"line":28,"column":0}},{"generated":{"line":30,"column":0},"source":"js/newPosts.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"js/newPosts.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"js/newPosts.js","original":{"line":32,"column":0}},{"generated":{"line":34,"column":0},"source":"js/newPosts.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":0},"source":"js/newPosts.js","original":{"line":35,"column":0}},{"generated":{"line":37,"column":0},"source":"js/newPosts.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"js/newPosts.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"js/newPosts.js","original":{"line":39,"column":0}},{"generated":{"line":40,"column":0},"source":"js/newPosts.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"js/newPosts.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"js/newPosts.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"js/newPosts.js","original":{"line":43,"column":0}},{"generated":{"line":44,"column":0},"source":"js/newPosts.js","original":{"line":44,"column":0}},{"generated":{"line":46,"column":0},"source":"js/newPosts.js","original":{"line":46,"column":0}},{"generated":{"line":47,"column":0},"source":"js/newPosts.js","original":{"line":47,"column":0}},{"generated":{"line":48,"column":0},"source":"js/newPosts.js","original":{"line":48,"column":0}},{"generated":{"line":49,"column":0},"source":"js/newPosts.js","original":{"line":49,"column":0}},{"generated":{"line":50,"column":0},"source":"js/newPosts.js","original":{"line":50,"column":0}},{"generated":{"line":51,"column":0},"source":"js/newPosts.js","original":{"line":51,"column":0}},{"generated":{"line":52,"column":0},"source":"js/newPosts.js","original":{"line":52,"column":0}},{"generated":{"line":53,"column":0},"source":"js/newPosts.js","original":{"line":53,"column":0}},{"generated":{"line":54,"column":0},"source":"js/newPosts.js","original":{"line":54,"column":0}},{"generated":{"line":55,"column":0},"source":"js/newPosts.js","original":{"line":55,"column":0}},{"generated":{"line":56,"column":0},"source":"js/newPosts.js","original":{"line":56,"column":0}},{"generated":{"line":57,"column":0},"source":"js/newPosts.js","original":{"line":57,"column":0}},{"generated":{"line":58,"column":0},"source":"js/newPosts.js","original":{"line":58,"column":0}},{"generated":{"line":59,"column":0},"source":"js/newPosts.js","original":{"line":59,"column":0}},{"generated":{"line":60,"column":0},"source":"js/newPosts.js","original":{"line":60,"column":0}},{"generated":{"line":61,"column":0},"source":"js/newPosts.js","original":{"line":61,"column":0}},{"generated":{"line":62,"column":0},"source":"js/newPosts.js","original":{"line":62,"column":0}},{"generated":{"line":63,"column":0},"source":"js/newPosts.js","original":{"line":63,"column":0}},{"generated":{"line":65,"column":0},"source":"js/newPosts.js","original":{"line":65,"column":0}},{"generated":{"line":66,"column":0},"source":"js/newPosts.js","original":{"line":66,"column":0}},{"generated":{"line":67,"column":0},"source":"js/newPosts.js","original":{"line":67,"column":0}},{"generated":{"line":68,"column":0},"source":"js/newPosts.js","original":{"line":68,"column":0}},{"generated":{"line":70,"column":0},"source":"js/newPosts.js","original":{"line":70,"column":0}},{"generated":{"line":71,"column":0},"source":"js/newPosts.js","original":{"line":71,"column":0}},{"generated":{"line":73,"column":0},"source":"js/newPosts.js","original":{"line":73,"column":0}},{"generated":{"line":74,"column":0},"source":"js/newPosts.js","original":{"line":74,"column":0}},{"generated":{"line":76,"column":0},"source":"js/newPosts.js","original":{"line":76,"column":0}},{"generated":{"line":77,"column":0},"source":"js/newPosts.js","original":{"line":77,"column":0}},{"generated":{"line":78,"column":0},"source":"js/newPosts.js","original":{"line":78,"column":0}},{"generated":{"line":79,"column":0},"source":"js/newPosts.js","original":{"line":79,"column":0}},{"generated":{"line":81,"column":0},"source":"js/newPosts.js","original":{"line":81,"column":0}},{"generated":{"line":82,"column":0},"source":"js/newPosts.js","original":{"line":82,"column":0}},{"generated":{"line":84,"column":0},"source":"js/newPosts.js","original":{"line":84,"column":0}},{"generated":{"line":85,"column":0},"source":"js/newPosts.js","original":{"line":85,"column":0}},{"generated":{"line":86,"column":0},"source":"js/newPosts.js","original":{"line":86,"column":0}},{"generated":{"line":87,"column":0},"source":"js/newPosts.js","original":{"line":87,"column":0}},{"generated":{"line":88,"column":0},"source":"js/newPosts.js","original":{"line":88,"column":0}},{"generated":{"line":89,"column":0},"source":"js/newPosts.js","original":{"line":89,"column":0}},{"generated":{"line":90,"column":0},"source":"js/newPosts.js","original":{"line":90,"column":0}},{"generated":{"line":91,"column":0},"source":"js/newPosts.js","original":{"line":91,"column":0}},{"generated":{"line":92,"column":0},"source":"js/newPosts.js","original":{"line":92,"column":0}},{"generated":{"line":93,"column":0},"source":"js/newPosts.js","original":{"line":93,"column":0}},{"generated":{"line":94,"column":0},"source":"js/newPosts.js","original":{"line":94,"column":0}},{"generated":{"line":95,"column":0},"source":"js/newPosts.js","original":{"line":95,"column":0}},{"generated":{"line":96,"column":0},"source":"js/newPosts.js","original":{"line":96,"column":0}},{"generated":{"line":97,"column":0},"source":"js/newPosts.js","original":{"line":97,"column":0}},{"generated":{"line":99,"column":0},"source":"js/newPosts.js","original":{"line":99,"column":0}},{"generated":{"line":100,"column":0},"source":"js/newPosts.js","original":{"line":100,"column":0}},{"generated":{"line":101,"column":0},"source":"js/newPosts.js","original":{"line":101,"column":0}},{"generated":{"line":103,"column":0},"source":"js/newPosts.js","original":{"line":103,"column":0}},{"generated":{"line":104,"column":0},"source":"js/newPosts.js","original":{"line":104,"column":0}},{"generated":{"line":105,"column":0},"source":"js/newPosts.js","original":{"line":105,"column":0}},{"generated":{"line":106,"column":0},"source":"js/newPosts.js","original":{"line":106,"column":0}},{"generated":{"line":108,"column":0},"source":"js/newPosts.js","original":{"line":108,"column":0}},{"generated":{"line":109,"column":0},"source":"js/newPosts.js","original":{"line":109,"column":0}},{"generated":{"line":110,"column":0},"source":"js/newPosts.js","original":{"line":110,"column":0}},{"generated":{"line":111,"column":0},"source":"js/newPosts.js","original":{"line":111,"column":0}},{"generated":{"line":113,"column":0},"source":"js/newPosts.js","original":{"line":113,"column":0}},{"generated":{"line":114,"column":0},"source":"js/newPosts.js","original":{"line":114,"column":0}},{"generated":{"line":115,"column":0},"source":"js/newPosts.js","original":{"line":115,"column":0}},{"generated":{"line":117,"column":0},"source":"js/newPosts.js","original":{"line":117,"column":0}},{"generated":{"line":118,"column":0},"source":"js/newPosts.js","original":{"line":118,"column":0}},{"generated":{"line":119,"column":0},"source":"js/newPosts.js","original":{"line":119,"column":0}},{"generated":{"line":120,"column":0},"source":"js/newPosts.js","original":{"line":120,"column":0}},{"generated":{"line":121,"column":0},"source":"js/newPosts.js","original":{"line":121,"column":0}},{"generated":{"line":122,"column":0},"source":"js/newPosts.js","original":{"line":122,"column":0}},{"generated":{"line":123,"column":0},"source":"js/newPosts.js","original":{"line":123,"column":0}},{"generated":{"line":124,"column":0},"source":"js/newPosts.js","original":{"line":124,"column":0}},{"generated":{"line":125,"column":0},"source":"js/newPosts.js","original":{"line":125,"column":0}},{"generated":{"line":126,"column":0},"source":"js/newPosts.js","original":{"line":126,"column":0}},{"generated":{"line":127,"column":0},"source":"js/newPosts.js","original":{"line":127,"column":0}},{"generated":{"line":128,"column":0},"source":"js/newPosts.js","original":{"line":128,"column":0}},{"generated":{"line":129,"column":0},"source":"js/newPosts.js","original":{"line":129,"column":0}},{"generated":{"line":130,"column":0},"source":"js/newPosts.js","original":{"line":130,"column":0}},{"generated":{"line":131,"column":0},"source":"js/newPosts.js","original":{"line":131,"column":0}},{"generated":{"line":133,"column":0},"source":"js/newPosts.js","original":{"line":133,"column":0}},{"generated":{"line":134,"column":0},"source":"js/newPosts.js","original":{"line":134,"column":0}},{"generated":{"line":135,"column":0},"source":"js/newPosts.js","original":{"line":135,"column":0}},{"generated":{"line":136,"column":0},"source":"js/newPosts.js","original":{"line":136,"column":0}},{"generated":{"line":137,"column":0},"source":"js/newPosts.js","original":{"line":137,"column":0}},{"generated":{"line":138,"column":0},"source":"js/newPosts.js","original":{"line":138,"column":0}},{"generated":{"line":139,"column":0},"source":"js/newPosts.js","original":{"line":139,"column":0}},{"generated":{"line":140,"column":0},"source":"js/newPosts.js","original":{"line":140,"column":0}},{"generated":{"line":142,"column":0},"source":"js/newPosts.js","original":{"line":142,"column":0}},{"generated":{"line":143,"column":0},"source":"js/newPosts.js","original":{"line":143,"column":0}},{"generated":{"line":145,"column":0},"source":"js/newPosts.js","original":{"line":145,"column":0}},{"generated":{"line":146,"column":0},"source":"js/newPosts.js","original":{"line":146,"column":0}},{"generated":{"line":148,"column":0},"source":"js/newPosts.js","original":{"line":148,"column":0}},{"generated":{"line":149,"column":0},"source":"js/newPosts.js","original":{"line":149,"column":0}},{"generated":{"line":150,"column":0},"source":"js/newPosts.js","original":{"line":150,"column":0}},{"generated":{"line":151,"column":0},"source":"js/newPosts.js","original":{"line":151,"column":0}},{"generated":{"line":152,"column":0},"source":"js/newPosts.js","original":{"line":152,"column":0}},{"generated":{"line":153,"column":0},"source":"js/newPosts.js","original":{"line":153,"column":0}},{"generated":{"line":154,"column":0},"source":"js/newPosts.js","original":{"line":154,"column":0}},{"generated":{"line":156,"column":0},"source":"js/newPosts.js","original":{"line":156,"column":0}},{"generated":{"line":157,"column":0},"source":"js/newPosts.js","original":{"line":157,"column":0}},{"generated":{"line":159,"column":0},"source":"js/newPosts.js","original":{"line":159,"column":0}},{"generated":{"line":160,"column":0},"source":"js/newPosts.js","original":{"line":160,"column":0}},{"generated":{"line":161,"column":0},"source":"js/newPosts.js","original":{"line":161,"column":0}},{"generated":{"line":162,"column":0},"source":"js/newPosts.js","original":{"line":162,"column":0}},{"generated":{"line":163,"column":0},"source":"js/newPosts.js","original":{"line":163,"column":0}},{"generated":{"line":164,"column":0},"source":"js/newPosts.js","original":{"line":164,"column":0}},{"generated":{"line":165,"column":0},"source":"js/newPosts.js","original":{"line":165,"column":0}},{"generated":{"line":166,"column":0},"source":"js/newPosts.js","original":{"line":166,"column":0}},{"generated":{"line":167,"column":0},"source":"js/newPosts.js","original":{"line":167,"column":0}},{"generated":{"line":168,"column":0},"source":"js/newPosts.js","original":{"line":168,"column":0}},{"generated":{"line":170,"column":0},"source":"js/newPosts.js","original":{"line":170,"column":0}},{"generated":{"line":171,"column":0},"source":"js/newPosts.js","original":{"line":171,"column":0}},{"generated":{"line":172,"column":0},"source":"js/newPosts.js","original":{"line":172,"column":0}},{"generated":{"line":173,"column":0},"source":"js/newPosts.js","original":{"line":173,"column":0}},{"generated":{"line":175,"column":0},"source":"js/newPosts.js","original":{"line":175,"column":0}},{"generated":{"line":176,"column":0},"source":"js/newPosts.js","original":{"line":176,"column":0}},{"generated":{"line":177,"column":0},"source":"js/newPosts.js","original":{"line":177,"column":0}},{"generated":{"line":178,"column":0},"source":"js/newPosts.js","original":{"line":178,"column":0}},{"generated":{"line":179,"column":0},"source":"js/newPosts.js","original":{"line":179,"column":0}},{"generated":{"line":181,"column":0},"source":"js/newPosts.js","original":{"line":181,"column":0}},{"generated":{"line":182,"column":0},"source":"js/newPosts.js","original":{"line":182,"column":0}},{"generated":{"line":183,"column":0},"source":"js/newPosts.js","original":{"line":183,"column":0}},{"generated":{"line":184,"column":0},"source":"js/newPosts.js","original":{"line":184,"column":0}},{"generated":{"line":185,"column":0},"source":"js/newPosts.js","original":{"line":185,"column":0}},{"generated":{"line":186,"column":0},"source":"js/newPosts.js","original":{"line":186,"column":0}},{"generated":{"line":187,"column":0},"source":"js/newPosts.js","original":{"line":187,"column":0}},{"generated":{"line":188,"column":0},"source":"js/newPosts.js","original":{"line":188,"column":0}},{"generated":{"line":189,"column":0},"source":"js/newPosts.js","original":{"line":189,"column":0}},{"generated":{"line":190,"column":0},"source":"js/newPosts.js","original":{"line":190,"column":0}},{"generated":{"line":191,"column":0},"source":"js/newPosts.js","original":{"line":191,"column":0}},{"generated":{"line":192,"column":0},"source":"js/newPosts.js","original":{"line":192,"column":0}},{"generated":{"line":193,"column":0},"source":"js/newPosts.js","original":{"line":193,"column":0}},{"generated":{"line":194,"column":0},"source":"js/newPosts.js","original":{"line":194,"column":0}},{"generated":{"line":195,"column":0},"source":"js/newPosts.js","original":{"line":195,"column":0}},{"generated":{"line":196,"column":0},"source":"js/newPosts.js","original":{"line":196,"column":0}},{"generated":{"line":198,"column":0},"source":"js/newPosts.js","original":{"line":198,"column":0}},{"generated":{"line":199,"column":0},"source":"js/newPosts.js","original":{"line":199,"column":0}},{"generated":{"line":200,"column":0},"source":"js/newPosts.js","original":{"line":200,"column":0}},{"generated":{"line":202,"column":0},"source":"js/newPosts.js","original":{"line":202,"column":0}},{"generated":{"line":203,"column":0},"source":"js/newPosts.js","original":{"line":203,"column":0}},{"generated":{"line":204,"column":0},"source":"js/newPosts.js","original":{"line":204,"column":0}},{"generated":{"line":205,"column":0},"source":"js/newPosts.js","original":{"line":205,"column":0}},{"generated":{"line":206,"column":0},"source":"js/newPosts.js","original":{"line":206,"column":0}},{"generated":{"line":208,"column":0},"source":"js/newPosts.js","original":{"line":208,"column":0}},{"generated":{"line":209,"column":0},"source":"js/newPosts.js","original":{"line":209,"column":0}},{"generated":{"line":210,"column":0},"source":"js/newPosts.js","original":{"line":210,"column":0}},{"generated":{"line":211,"column":0},"source":"js/newPosts.js","original":{"line":211,"column":0}},{"generated":{"line":212,"column":0},"source":"js/newPosts.js","original":{"line":212,"column":0}},{"generated":{"line":213,"column":0},"source":"js/newPosts.js","original":{"line":213,"column":0}},{"generated":{"line":214,"column":0},"source":"js/newPosts.js","original":{"line":214,"column":0}},{"generated":{"line":215,"column":0},"source":"js/newPosts.js","original":{"line":215,"column":0}},{"generated":{"line":216,"column":0},"source":"js/newPosts.js","original":{"line":216,"column":0}},{"generated":{"line":218,"column":0},"source":"js/newPosts.js","original":{"line":218,"column":0}},{"generated":{"line":219,"column":0},"source":"js/newPosts.js","original":{"line":219,"column":0}},{"generated":{"line":220,"column":0},"source":"js/newPosts.js","original":{"line":220,"column":0}},{"generated":{"line":222,"column":0},"source":"js/newPosts.js","original":{"line":222,"column":0}},{"generated":{"line":223,"column":0},"source":"js/newPosts.js","original":{"line":223,"column":0}},{"generated":{"line":224,"column":0},"source":"js/newPosts.js","original":{"line":224,"column":0}},{"generated":{"line":225,"column":0},"source":"js/newPosts.js","original":{"line":225,"column":0}},{"generated":{"line":227,"column":0},"source":"js/newPosts.js","original":{"line":227,"column":0}},{"generated":{"line":228,"column":0},"source":"js/newPosts.js","original":{"line":228,"column":0}},{"generated":{"line":229,"column":0},"source":"js/newPosts.js","original":{"line":229,"column":0}},{"generated":{"line":230,"column":0},"source":"js/newPosts.js","original":{"line":230,"column":0}},{"generated":{"line":231,"column":0},"source":"js/newPosts.js","original":{"line":231,"column":0}},{"generated":{"line":232,"column":0},"source":"js/newPosts.js","original":{"line":232,"column":0}},{"generated":{"line":233,"column":0},"source":"js/newPosts.js","original":{"line":233,"column":0}},{"generated":{"line":234,"column":0},"source":"js/newPosts.js","original":{"line":234,"column":0}},{"generated":{"line":235,"column":0},"source":"js/newPosts.js","original":{"line":235,"column":0}},{"generated":{"line":236,"column":0},"source":"js/newPosts.js","original":{"line":236,"column":0}},{"generated":{"line":237,"column":0},"source":"js/newPosts.js","original":{"line":237,"column":0}},{"generated":{"line":238,"column":0},"source":"js/newPosts.js","original":{"line":238,"column":0}},{"generated":{"line":239,"column":0},"source":"js/newPosts.js","original":{"line":239,"column":0}},{"generated":{"line":240,"column":0},"source":"js/newPosts.js","original":{"line":240,"column":0}},{"generated":{"line":242,"column":0},"source":"js/newPosts.js","original":{"line":242,"column":0}},{"generated":{"line":243,"column":0},"source":"js/newPosts.js","original":{"line":243,"column":0}},{"generated":{"line":244,"column":0},"source":"js/newPosts.js","original":{"line":244,"column":0}},{"generated":{"line":245,"column":0},"source":"js/newPosts.js","original":{"line":245,"column":0}},{"generated":{"line":246,"column":0},"source":"js/newPosts.js","original":{"line":246,"column":0}},{"generated":{"line":247,"column":0},"source":"js/newPosts.js","original":{"line":247,"column":0}},{"generated":{"line":248,"column":0},"source":"js/newPosts.js","original":{"line":248,"column":0}},{"generated":{"line":249,"column":0},"source":"js/newPosts.js","original":{"line":249,"column":0}},{"generated":{"line":250,"column":0},"source":"js/newPosts.js","original":{"line":250,"column":0}},{"generated":{"line":251,"column":0},"source":"js/newPosts.js","original":{"line":251,"column":0}},{"generated":{"line":252,"column":0},"source":"js/newPosts.js","original":{"line":252,"column":0}},{"generated":{"line":253,"column":0},"source":"js/newPosts.js","original":{"line":253,"column":0}},{"generated":{"line":254,"column":0},"source":"js/newPosts.js","original":{"line":254,"column":0}},{"generated":{"line":256,"column":0},"source":"js/newPosts.js","original":{"line":256,"column":0}},{"generated":{"line":257,"column":0},"source":"js/newPosts.js","original":{"line":257,"column":0}},{"generated":{"line":259,"column":0},"source":"js/newPosts.js","original":{"line":259,"column":0}},{"generated":{"line":260,"column":0},"source":"js/newPosts.js","original":{"line":260,"column":0}},{"generated":{"line":262,"column":0},"source":"js/newPosts.js","original":{"line":262,"column":0}},{"generated":{"line":263,"column":0},"source":"js/newPosts.js","original":{"line":263,"column":0}},{"generated":{"line":264,"column":0},"source":"js/newPosts.js","original":{"line":264,"column":0}},{"generated":{"line":265,"column":0},"source":"js/newPosts.js","original":{"line":265,"column":0}},{"generated":{"line":267,"column":0},"source":"js/newPosts.js","original":{"line":267,"column":0}},{"generated":{"line":268,"column":0},"source":"js/newPosts.js","original":{"line":268,"column":0}},{"generated":{"line":269,"column":0},"source":"js/newPosts.js","original":{"line":269,"column":0}},{"generated":{"line":270,"column":0},"source":"js/newPosts.js","original":{"line":270,"column":0}},{"generated":{"line":271,"column":0},"source":"js/newPosts.js","original":{"line":271,"column":0}},{"generated":{"line":272,"column":0},"source":"js/newPosts.js","original":{"line":272,"column":0}},{"generated":{"line":273,"column":0},"source":"js/newPosts.js","original":{"line":273,"column":0}},{"generated":{"line":275,"column":0},"source":"js/newPosts.js","original":{"line":275,"column":0}},{"generated":{"line":276,"column":0},"source":"js/newPosts.js","original":{"line":276,"column":0}},{"generated":{"line":277,"column":0},"source":"js/newPosts.js","original":{"line":277,"column":0}},{"generated":{"line":278,"column":0},"source":"js/newPosts.js","original":{"line":278,"column":0}},{"generated":{"line":279,"column":0},"source":"js/newPosts.js","original":{"line":279,"column":0}},{"generated":{"line":281,"column":0},"source":"js/newPosts.js","original":{"line":281,"column":0}},{"generated":{"line":282,"column":0},"source":"js/newPosts.js","original":{"line":282,"column":0}},{"generated":{"line":283,"column":0},"source":"js/newPosts.js","original":{"line":283,"column":0}},{"generated":{"line":284,"column":0},"source":"js/newPosts.js","original":{"line":284,"column":0}},{"generated":{"line":285,"column":0},"source":"js/newPosts.js","original":{"line":285,"column":0}},{"generated":{"line":286,"column":0},"source":"js/newPosts.js","original":{"line":286,"column":0}},{"generated":{"line":287,"column":0},"source":"js/newPosts.js","original":{"line":287,"column":0}},{"generated":{"line":289,"column":0},"source":"js/newPosts.js","original":{"line":289,"column":0}},{"generated":{"line":290,"column":0},"source":"js/newPosts.js","original":{"line":290,"column":0}},{"generated":{"line":292,"column":0},"source":"js/newPosts.js","original":{"line":292,"column":0}},{"generated":{"line":293,"column":0},"source":"js/newPosts.js","original":{"line":293,"column":0}}],"sources":{"js/newPosts.js":"// // CRUD\n\n//     // CRUD - FUNCTIONS\n\n//     // CRUD - FUNCTIONS - GET REPLY COUNT\n//     function replyCount(no, type) {\n//         let replyCont;\n//         if (type === \"reply\") {\n//           replyCont = container.form.reply[no].previousElementSibling;\n//         } else if (type === \"replytoreply\") {\n//           replyCont = container.form.replyToReply[no].parentElement;\n//         }\n//         return replyCont.childElementCount;\n//       }\n  \n//       // CRUD - FUNCTIONS - GENERATE ID\n//       function generateID() {\n//         let IDarray = [];\n//         for (let id in comments) {\n//           IDarray.push(comments[id].id);\n//           if (comments[id].replies.length > 0) {\n//             for (let reply in comments[id].replies)\n//               IDarray.push(comments[id].replies[reply].id);\n//           }\n//         }\n//         const ID = Math.max(...IDarray) + 1;\n//         return ID;\n//       }\n  \n//       // CRUD - FUNCTIONS - NEW POST\n//       function newPost(type, source) {\n//         const { currentUser } = data;\n  \n//         const postContainer = document.createElement(\"div\");\n//         postContainer.classList.add(\"comment\");\n  \n//         // adds extra classes if post isn't a comment\n//         if (type === \"reply\") {\n//           postContainer.classList.add(\"comment--reply\");\n//         } else if (type === \"replytoreply\") {\n//           postContainer.classList.add(\"comment--reply\");\n//           postContainer.classList.add(\"comment--replytoreply\");\n//         }\n//         postContainer.classList.add(\"comment--you\");\n  \n//         // generates child elements for new post\n//         const newComment = {\n//           avatar: element.avatar(source),\n//           username: element.username(source),\n//           createdAt: element.createdAt(source),\n//           content: element.content(source),\n//           updateForm: element.updateForm(source),\n//           vote: element.vote(source),\n//           CRUD: element.CRUD(source),\n//         };\n//         for (let ele in newComment) {\n//           if (newComment[ele] !== newComment.updateForm) {\n//             postContainer.append(newComment[ele]);\n//           }\n//         }\n//         if (currentUser[0].username === source.user.username) {\n//           postContainer.append(newComment.updateForm);\n//         }\n  \n//         // adds reply class to crud container\n//         if (type === \"reply\") {\n//           newComment.CRUD.classList.add(\"CRUD-container--reply\");\n//         }\n  \n//         // Adds CRUD functionality\n//         CRUDFunction.delete(postContainer);\n  \n//         return postContainer;\n//       }\n  \n//       // CRUD - DOM MANIPULATION\n//       // CRUD - DOM MANIPULATION - NEW COMMENT\n//       container.form.comment.addEventListener(\"submit\", (e) => {\n//         e.preventDefault();\n  \n//         const { comments, currentUser } = data;\n//         const content = document.querySelector(selectors.input.comment).value;\n  \n//         const newComment = {\n//           id: generateID(),\n//           content: content,\n//           createdAt: \"TEST\",\n//           score: 0,\n//           user: {\n//             image: {\n//               png: currentUser[0].image.png,\n//               webp: currentUser[0].image.webp,\n//             },\n//             username: currentUser[0].username,\n//           },\n//           replies: [],\n//         };\n  \n//         // Adds comment in data\n//         httpRequest.post(newComment);\n//         comments.push(newComment);\n  \n//         // Adds comment in DOM\n//         const wrapper = document.getElementById(\"comment-wrapper\");\n//         wrapper.appendChild(newPost(\"comment\", newComment));\n//       });\n  \n//       // CRUD - DOM MANIPULATION - NEW REPLY\n//       for (let x = 0; x < container.form.reply.length; x++) {\n//         container.form.reply[x].addEventListener(\"submit\", (e) => {\n//           e.preventDefault();\n  \n//           const { comments, currentUser } = data;\n//           const replyTo = container.input.replyTo[x].innerText;\n//           const content = container.input.replyContent[x].value;\n  \n//           const newReply = {\n//             id: generateID(),\n//             content: content,\n//             createdAt: \"TEST\",\n//             replyingTo: replyTo,\n//             replies: {},\n//             score: 0,\n//             user: {\n//               image: {\n//                 png: currentUser[0].image.png,\n//                 webp: currentUser[0].image.webp,\n//               },\n//               username: currentUser[0].username,\n//             },\n//           };\n  \n//           if (comments[x].replies.length === 0) {\n//             // Creates container for replies\n//             const replyCont = document.createElement(\"div\");\n//             replyCont.classList.add(\"reply-wrapper\");\n//             const hr = document.createElement(\"hr\");\n//             hr.classList.add(\"reply-wrapper__ruler\");\n//             replyCont.appendChild(hr);\n//             container.comments[x].insertAdjacentElement(\"afterend\", replyCont);\n  \n//             // Adds reply in data\n//             comments[x].replies[newReply.id] = newReply;\n  \n//             // Adds reply in DOM\n//             replyCont.appendChild(newPost(\"reply\", newReply));\n  \n//             // Generates hr height for reply container\n//             replyCont.style.gridTemplateRows = `repeat(${replyCount(\n//               x,\n//               \"reply\"\n//             )}, auto)`;\n//           } else {\n//             comments[x].replies[newReply.id] = newReply;\n  \n//             const replyWrapper = container.form.reply[x].previousElementSibling;\n//             replyWrapper.appendChild(newPost(\"reply\", newReply));\n  \n//             // Generates hr height for reply container\n//             replyWrapper.style.gridTemplateRows = `repeat(${replyCount(\n//               x,\n//               \"reply\"\n//             )}, auto)`;\n//           }\n//           // comments[x].replies[comments[x].replies.length + 1].push(newReply);\n//           httpRequest.post(newReply)\n//         });\n//       }\n  \n//       //  CRUD - DOM MANIPULATION - NEW REPLY TO REPLY\n//       for (let x = 0; x < container.form.replyToReply.length; x++) {\n//         container.form.replyToReply[x].addEventListener(\"submit\", (e) => {\n//           e.preventDefault();\n  \n//           const { comments, currentUser } = data;\n//           const replyTo = container.input.replyReplyTo[x].innerText;\n//           const parentUser = container.input.replyReplyTo[x].parentElement.parentElement.previousElementSibling.childNodes[1].innerText\n//           const content = container.input.replyToReplyContent[x].value;\n//           console.log(parentUser)\n  \n//           const newReply = {\n//             id: generateID(),\n//             content: content,\n//             createdAt: \"TEST\",\n//             replyingTo: replyTo,\n//             parentUser: parentUser,\n//             replies: {},\n//             score: 0,\n//             user: {\n//               image: {\n//                 png: currentUser[0].image.png,\n//                 webp: currentUser[0].image.webp,\n//               },\n//               username: currentUser[0].username,\n//             },\n//           };\n  \n//           // Adds replytoreply in DOM\n//           const replyWrapper = container.form.replyToReply[x].parentNode;\n//           replyWrapper.appendChild(newPost(\"replytoreply\", newReply));\n  \n//           // Generates hr height for reply container\n//           replyWrapper.style.gridTemplateRows = `repeat(${replyCount(\n//             x,\n//             \"replytoreply\"\n//           )}, auto)`;\n  \n//           // Adds replytoreply in data\n//           const parentComment =\n//             replyWrapper.previousSibling.childNodes[3].childNodes[0].innerText;\n//           for (let x in comments) {\n//             if (comments[x].content === parentComment) {\n//               const replies = comments[x].replies;\n//               replies[replies.length] = newReply;\n//             }\n//           }\n  \n//           httpRequest.post(newReply)\n//         });\n//       }\n  \n//       // CRUD - DOM MANIPULATION - UPDATE\n//       for (let x = 0; x < container.form.update.length; x++) {\n//         container.form.update[x].addEventListener(\"submit\", (e) => {\n//           e.preventDefault();\n  \n//           // Sets post content\n//           let oldContent;\n//           if (\n//             container.input.update[x].parentElement.parentElement.childNodes[3]\n//               .childNodes[1]\n//           ) {\n//             oldContent =\n//               container.input.update[x].parentElement.parentElement.childNodes[3]\n//                 .childNodes[1];\n//           } else {\n//             oldContent =\n//               container.input.update[x].parentElement.parentElement.childNodes[3]\n//                 .childNodes[0];\n//           }\n  \n//           // Sets id of updated comment\n//           let id\n//           for(let x in comments){\n//             if (oldContent.innerText ===comments[x].content){\n//               id = comments[x].id\n//             } else {\n//               for(let y in comments[x].replies){\n//                 if (oldContent.innerText ===comments[x].replies[y].content){\n//                   id = comments[x].replies[y].id\n//                 }\n//               }\n//             }\n//           }\n  \n//           // Stores new text for content\n//           const newContent = container.input.update[x].value;\n  \n//           // Updates post in data\n//           httpRequest.update(id, {content: newContent});\n  \n//           // Updates post in DOM\n//           oldContent.innerText = newContent;\n//         });\n//       }\n  \n//       // VOTE\n//       // VOTE - FUNCTION\n//       function vote(mode) {\n//         const vote = document.getElementsByClassName(`vote__btn--${mode}`);\n//         for (let x = 0; x < vote.length; x++) {\n//           vote[x].addEventListener(\"click\", (e) => {\n//             e.preventDefault();\n  \n//             // Changes score in DOM\n//             const scoreContianer = vote[x].parentElement.childNodes[1];\n//             let score = scoreContianer.innerText;\n//             mode === \"upvote\" ? score++ : score--;\n//             scoreContianer.innerText = score;\n  \n//             // Changes score in data\n//             mode === \"upvote\"\n//               ? httpRequest.vote(scoreContianer, \"upvote\")\n//               : httpRequest.vote(scoreContianer, \"downvote\");\n//           });\n//         }\n//       }\n  \n//       // VOTE - UPVOTE\n//       vote(\"upvote\");\n  \n//       // VOTE - DOWNVOTE\n//       vote(\"downvote\");"},"lineCount":null}},"error":null,"hash":"32a6a8b5f71a0ad4097579a7eb22c4c5","cacheData":{"env":{}}}